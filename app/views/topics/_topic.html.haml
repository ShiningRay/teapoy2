-# coding: utf-8
- cache topic do
  - id=topic.id
  - group = @group || topic.group
  - group_id = topic.group_id

  %article.cf.hentry[topic]
    %h2.entry-title= link_to topic_title(topic), [group, topic], :rel => 'bookmark'
    %ul.meta.cf
      -#
        - if logged_in?
          %li.subscribe-button
            - if current_user.has_subscribed?(topic)
              = link_to unsubscribe_topic_path(group, topic), :class => 'unsubscribe' do
                = typicon('eye')
                = t('topics.unsubscribe')
            - else
              = link_to subscribe_topic_path(group, topic), :class => 'subscribe' do
                = typicon('eye-outline')
                = t('topics.subscribe')

      %li.comment-status
        - if topic.comment_status == 'closed'
          %span.comment_head
            禁止评论
        - else
          %a{:class=>"comments #{@list_view? "list_view" :  ""}",
            :href=> group_topic_path(topic.group, topic, :anchor => "comments_#{topic.id}"),
            :id=>"c-#{topic.id}"}
            = typicon 'messages'
            = topic.comments_count > 0 ? "#{topic.comments_count}条评论" : "暂无评论"
      %li.post-signature
        .user-info
          - unless topic.anonymous
            - user = topic.user
            - if user
              .user-avatar= image_tag user.avatar.url("thumb"), :alt => "#{user.name_or_login}", :class => 'avatar'
              .user-details
                = link_to user.name_or_login, user, :title => "@#{user.login}",:class => 'user', :data => {:login => user.login} #user_detail_for(user)

          .user-action-time
            发布于
            = link_to group.name, group_topics_path(group),:data => {:alias => group.alias},:class => 'group'
            = link_to [group,topic], :rel => 'permalink' do
              %time.relativetime.timeago{:datetime => topic.created_at.iso8601, :title => topic.created_at.to_s}= topic.created_at
            最后回复于
            %time.relativetime.timeago{:datetime => topic.last_posted_at.iso8601, :title => topic.last_posted_at.to_s}= topic.created_at
